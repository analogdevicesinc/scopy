cmake_minimum_required(VERSION 3.18)

set(CMAKE_SYSTEM_NAME Linux)

#[[
 - CMAKE_SYSROOT
 - CMAKE_INSTALL_PREFIX
 - STAGING_AREA
 - CMAKE_SYSTEM_PROCESSOR
 - CMAKE_LIBRARY_ARCHITECTURE
are exported from the arm_build_config.sh script
]]

set(CMAKE_SYSROOT $ENV{CMAKE_SYSROOT})
set(QT_LOCATION $ENV{QT_LOCATION})
set(STAGING_AREA $ENV{STAGING_AREA})
set(CMAKE_SYSROOT $ENV{CMAKE_SYSROOT})
set(CMAKE_SYSTEM_PROCESSOR $ENV{CMAKE_SYSTEM_PROCESSOR})
set(CMAKE_LIBRARY_ARCHITECTURE $ENV{CMAKE_LIBRARY_ARCHITECTURE})

set(TOOLCHAIN_FILE ${STAGING_AREA}/cross-pi-gcc)
set(TOOLCHAIN_BIN ${TOOLCHAIN_FILE}/bin)
set(CMAKE_PREFIX_PATH ${QT_LOCATION})
list(APPEND CMAKE_PREFIX_PATH "${CMAKE_SYSROOT}/usr/lib")
list(APPEND CMAKE_PREFIX_PATH "${CMAKE_SYSROOT}/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}")

if(CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64")
	set(PKG_CONFIG_EXECUTABLE ${CMAKE_LIBRARY_ARCHITECTURE}-pkg-config CACHE PATH "PKG_CONFIG_EXECUTABLE" FORCE)
	set(ENV{PKG_CONFIG_DIR} "")
else()
	set(PKG_CONFIG_EXECUTABLE "${CMAKE_SYSROOT}/usr/bin/${CMAKE_LIBRARY_ARCHITECTURE}-pkg-config"
	    CACHE PATH "PKG_CONFIG_EXECUTABLE" FORCE
	)
endif()

set(ENV{PKG_CONFIG_EXECUTABLE} ${PKG_CONFIG_EXECUTABLE})
set(ENV{PKG_CONFIG_ALLOW_CROSS} 1)
set(PKG_CONFIG_USE_CMAKE_PREFIX_PATH ON)
set(RPI_PKG_CONFIG_LIBDIR "${CMAKE_SYSROOT}/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}/pkgconfig:${RPI_PKG_CONFIG_LIBDIR}")
set(RPI_PKG_CONFIG_LIBDIR "${CMAKE_SYSROOT}/usr/share/pkgconfig:${RPI_PKG_CONFIG_LIBDIR}")
set(RPI_PKG_CONFIG_LIBDIR "${CMAKE_SYSROOT}/usr/lib/pkgconfig:${RPI_PKG_CONFIG_LIBDIR}")
set(RPI_PKG_CONFIG_LIBDIR "${CMAKE_SYSROOT}/usr/local/lib/pkgconfig:${RPI_PKG_CONFIG_LIBDIR}")
set(ENV{PKG_CONFIG_LIBDIR} "${RPI_PKG_CONFIG_LIBDIR}")
set(ENV{PKG_CONFIG} "${CMAKE_SYSROOT}/usr/bin/${CMAKE_LIBRARY_ARCHITECTURE}-pkg-config")

set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/include:")
set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/include:")
set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/include/${CMAKE_LIBRARY_ARCHITECTURE}:")
set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/share/include:")
set(ENV{PKG_CONFIG_SYSROOT_DIR} "${CMAKE_SYSROOT}")

set(CMAKE_AR ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-ar)
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-gcc)
set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-gcc)
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-g++)
set(CMAKE_LINKER ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-ld)
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-objcopy)
set(CMAKE_RANLIB ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-ranlib)
set(CMAKE_SIZE ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-size)
set(CMAKE_STRIP ${TOOLCHAIN_BIN}/${CMAKE_LIBRARY_ARCHITECTURE}-strip)

set(CMAKE_C_FLAGS "-march=armv8-a")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${CMAKE_SYSROOT}/include")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${CMAKE_SYSROOT}/usr/include")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${CMAKE_SYSROOT}/usr/include/${CMAKE_LIBRARY_ARCHITECTURE}")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${CMAKE_SYSROOT}/usr/share/include")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
set(CMAKE_CXX_FLAGS "-fexceptions -frtti ${CMAKE_C_FLAGS}")
set(CMAKE_CXX_FLAGS_DEBUG "-Os -g")
set(CMAKE_CXX_FLAGS_RELEASE "-Os -DNDEBUG")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--as-needed -Wl,-O1 -Wl,--hash-style=gnu")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lpthread -lboost_program_options")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${CMAKE_SYSROOT}/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${CMAKE_SYSROOT}/usr/lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${CMAKE_SYSROOT}/usr/local/lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${QT_LOCATION}/lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${TOOLCHAIN_FILE}/${CMAKE_LIBRARY_ARCHITECTURE}/lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${TOOLCHAIN_FILE}/${CMAKE_LIBRARY_ARCHITECTURE}/libc/lib")

set(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS})

#[[
Debug Mode
  set(CMAKE_VERBOSE ON)
  set(CMAKE_VERBOSE_MAKEFILE ON)
  set(PKG_CONFIG_ARGN "--debug")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--verbose")
  set(CMAKE_FIND_DEBUG_MODE TRUE)
]]

set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)
set(CMAKE_INSTALL_RPATH
    "$ORIGIN"
    "$ORIGIN/../lib"
    "/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}"
    "/usr/lib"
    "/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}/qt5/lib"
)

set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)
