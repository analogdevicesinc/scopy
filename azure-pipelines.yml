variables:
    QT_FORMULAE: qt@5
    REPO_SLUG: $(Build.Repository.Name)
    CURRENT_COMMIT: $(Build.SourceVersion)

trigger:
  branches:
    include:
    - main
    - master
    - scopy2-ci-macOS
    - staging/*
    - ci-*
  tags:
    include:
    - v*

pr:
  branches:
    include:
    - main
    - master
    - 20*

stages:
- stage: Builds
  jobs:
  - job: macOSBuilds
    strategy:
      matrix:
        macOS_10_15:
          vmImage: 'macOS-10.15'
          artifactName: 'macOS-10.15'
        macOS_11:
          vmImage: 'macOS-11'
          artifactName: 'macOS-11'
    pool:
      vmImage: $[ variables['vmImage'] ]
    steps:
    - checkout: self
      fetchDepth: 1
      clean: true
    - script: ./ci/macOS/install_macos_deps.sh
      displayName: 'Build and Install Dependencies'
      workingDirectory: $(Build.Repository.LocalPath)
    - script: |
            export BUILD_HOST="$(vmImage)"
            export ACCOUNT_NAME=`echo $REPO_SLUG | awk -F "/" '{print $1}'`
            export PROJECT_NAME=`echo $REPO_SLUG | awk -F "/" '{print $2}'`
            export USERNAME="azure-pipelines"
            export BUILD_REPO_URL=$(Build.Repository.Uri)
            export RUN_ID=$(Build.BuildId)
            export RUN_NUMBER=$(Build.BuildNumber)
            export JOB_ID=$(System.JobId)
            export JOB_NAME=$(System.JobName)
            export RUNNER_ARCH=$(Agent.OSArchitecture)
            ./ci/macOS/build_azure_macos.sh
      displayName: 'Build Scopy'
      workingDirectory: $(Build.Repository.LocalPath)
    - script: ./ci/macOS/package_darwin.sh
      displayName: 'Create Scopy.dmg'
      workingDirectory: $(Build.Repository.LocalPath)
    - script: cp -R staging ${BUILD_ARTIFACTSTAGINGDIRECTORY}
      displayName: 'Copy Staging Dir'
      workingDirectory: $(Build.Repository.LocalPath)
    - script: |
            echo "ACCOUNT_NAME = " ${ACCOUNT_NAME}
            echo "PROJECT_NAME = " ${PROJECT_NAME}
            MACOS_VERSION=$(/usr/libexec/PlistBuddy -c "Print:ProductVersion" /System/Library/CoreServices/SystemVersion.plist)
            DEPLOY_FILE=Scopy-macos${MACOS_VERSION}-${CURRENT_COMMIT:0:7}.dmg
            cp build/Scopy.dmg ${BUILD_ARTIFACTSTAGINGDIRECTORY}/${DEPLOY_FILE}
            cd ${BUILD_ARTIFACTSTAGINGDIRECTORY}
            tar czvf Scopy-macos${MACOS_VERSION}.tar.gz ${DEPLOY_FILE}
            ls -la
      displayName: 'Rename and copy artifact'
      workingDirectory: $(Build.Repository.LocalPath)
    - task: GithubRelease@0
      displayName: 'Push to continuous release'
      condition: and(succeeded(), and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
      inputs:
        githubConnection: scopy_continuous_release
        repositoryName: $(Build.Repository.Name)
        action: edit
        tag: continous
        assets: $(Build.ArtifactStagingDirectory)/Scopy*.tar.gz
        assetUploadMode: replace
        isPreRelease: true
        addChangeLog: false
    - task: PublishPipelineArtifact@1
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: '$(artifactName)'
