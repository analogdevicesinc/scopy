<!--                                                                 -->
<!-- Copyright (C) 2013-2014 Analog Devices, Inc.                    -->
<!-- This is a machine generated file, do not modify                 -->
<!-- Please send bug reports to http://ez.analog.com/community/fpga  -->
<!--                                                                 -->

<adi_regmap_dac>
	<Register>
		<Name>REG_VERSION</Name>
		<Address>0x0000</Address>
		<Description>Version and Scratch Registers (REG_VERSION)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>VERSION[31:0]</Name>
				<Access>RO</Access>
				<Description>VERSION[31:0]</Description>
				<Visibility>Public</Visibility>
				<Width>32</Width>
				<Notes>Version number.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>32</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_ID</Name>
		<Address>0x0004</Address>
		<Description>Version and Scratch Registers (REG_ID)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>ID[31:0]</Name>
				<Access>RO</Access>
				<Description>ID[31:0]</Description>
				<Visibility>Public</Visibility>
				<Width>32</Width>
				<Notes>Instance identifier number.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>32</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_SCRATCH</Name>
		<Address>0x0008</Address>
		<Description>Version and Scratch Registers (REG_SCRATCH)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>SCRATCH[31:0]</Name>
				<Access>RW</Access>
				<Description>SCRATCH[31:0]</Description>
				<Visibility>Public</Visibility>
				<Width>32</Width>
				<Notes>Scratch register.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>32</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_RSTN</Name>
		<Address>0x0040</Address>
		<Description>DAC Interface Control &amp; Status (REG_RSTN)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>MMCM_RSTN</Name>
				<Access>RW</Access>
				<Description>MMCM_RSTN</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>MMCM reset only (required for DRP access). Reset, default is IN-RESET (0x0), software must write 0x1 to bring up the core.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>1</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>RSTN</Name>
				<Access>RW</Access>
				<Description>RSTN</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Reset, default is IN-RESET (0x0), software must write 0x1 to bring up the core.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CNTRL_1</Name>
		<Address>0x0044</Address>
		<Description>DAC Interface Control &amp; Status (REG_CNTRL_1)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>ENABLE</Name>
				<Access>RW</Access>
				<Description>ENABLE</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>A 0 to 1 transition enables all the data channels.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CNTRL_2</Name>
		<Address>0x0048</Address>
		<Description>DAC Interface Control &amp; Status (REG_CNTRL_2)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>PAR_TYPE</Name>
				<Access>RW</Access>
				<Description>PAR_TYPE</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Select parity even (0x0) or odd (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>7</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>PAR_ENB</Name>
				<Access>RW</Access>
				<Description>PAR_ENB</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Select parity (0x1) or frame (0x0) mode.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>6</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>R1_MODE</Name>
				<Access>RW</Access>
				<Description>R1_MODE</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Select number of RF channels 1 (0x1) or 2 (0x0).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>5</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>DATA_FORMAT</Name>
				<Access>RW</Access>
				<Description>DATA_FORMAT</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Select data format 2's complement (0x0) or offset binary (0x1). NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>4</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>DATA_SEL[3:0]</Name>
				<Access>RW</Access>
				<Description>DATA_SEL[3:0]</Description>
				<Visibility>Public</Visibility>
				<Width>4</Width>
				<Notes>Select dds (4'h0), sed (4'h01) or ddr (4'h02) as dac data.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>4</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_RATECNTRL</Name>
		<Address>0x004C</Address>
		<Description>DAC Interface Control &amp; Status (REG_RATECNTRL)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>RATE[7:0]</Name>
				<Access>RW</Access>
				<Description>RATE[7:0]</Description>
				<Visibility>Public</Visibility>
				<Width>8</Width>
				<Notes>The effective dac rate (the maximum possible rate is dependent on the interface clock). The samples are generated at 1/RATE of the interface clock.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>8</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_FRAME</Name>
		<Address>0x0050</Address>
		<Description>DAC Interface Control &amp; Status (REG_FRAME)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>FRAME</Name>
				<Access>RW</Access>
				<Description>FRAME</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>The use of frame is device specific. Usually a 0 -&gt; 1 transition generates a FRAME (1 DCI clock period) pulse on the interface.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_STATUS</Name>
		<Address>0x0054</Address>
		<Description>DAC Interface Control &amp; Status (REG_STATUS)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>CLK_FREQ[31:0]</Name>
				<Access>RO</Access>
				<Description>CLK_FREQ[31:0]</Description>
				<Visibility>Public</Visibility>
				<Width>32</Width>
				<Notes>Interface clock frequency. This is relative to the processor clock and in many cases is 100MHz. The number is represented as unsigned 16.16 format. Assuming a 100MHz processor clock the minimum is 1.523kHz and maximum is 6.554THz. The actual interface clock is CLK_FREQ * CLK_RATIO (see below). Note that the actual sampling clock may not be the same as the interface clock- software must consider device specific implementation parameters to calculate the final sampling clock.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>32</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_STATUS</Name>
		<Address>0x0058</Address>
		<Description>DAC Interface Control &amp; Status (REG_STATUS)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>CLK_RATIO[31:0]</Name>
				<Access>RO</Access>
				<Description>CLK_RATIO[31:0]</Description>
				<Visibility>Public</Visibility>
				<Width>32</Width>
				<Notes>Interface clock ratio - as a factor actual received clock. This is implementation specific and depends on any serial to parallel conversion and interface type (ddr/sdr/qdr).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>32</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_STATUS</Name>
		<Address>0x005C</Address>
		<Description>DAC Interface Control &amp; Status (REG_STATUS)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>STATUS</Name>
				<Access>RO</Access>
				<Description>STATUS</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>Interface status, if set indicates no errors. If not set, there  are errors, software may try resetting the cores.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_DRP_CNTRL</Name>
		<Address>0x0070</Address>
		<Description>DRP Control &amp; Status (REG_DRP_CNTRL)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DRP_RWN</Name>
				<Access>RW</Access>
				<Description>DRP_RWN</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>DRP read (0x1) or write (0x0) select (does not include GTX lanes).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>28</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>DRP_ADDRESS[11:0]</Name>
				<Access>RW</Access>
				<Description>DRP_ADDRESS[11:0]</Description>
				<Visibility>Public</Visibility>
				<Width>12</Width>
				<Notes>DRP address, designs that contain more than one DRP accessible primitives  have selects based on the most significant bits (does not include GTX lanes).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>12</SliceWidth>
			</BitField>
			<BitField>
				<Name>DRP_WDATA[15:0]</Name>
				<Access>RW</Access>
				<Description>DRP_WDATA[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>DRP write data (does not include GTX lanes).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_DRP_STATUS</Name>
		<Address>0x0074</Address>
		<Description>DAC Interface Control &amp; Status (REG_DRP_STATUS)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DRP_STATUS</Name>
				<Access>RO</Access>
				<Description>DRP_STATUS</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>If set indicates busy (access pending). The read data may not be valid if  this bit is set (does not include GTX lanes).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>DRP_RDATA</Name>
				<Access>RO</Access>
				<Description>DRP_RDATA</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>DRP read data (does not include GTX lanes).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_UI_STATUS</Name>
		<Address>0x0088</Address>
		<Description>User Interface Status (REG_UI_STATUS)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>UI_OVF</Name>
				<Access>RW1C</Access>
				<Description>UI_OVF</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>User Interface overflow. If set, indicates an overflow occured during data transfer at the user interface (FIFO interface). Software must write a 0x1 to clear this register bit.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>1</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>UI_UNF</Name>
				<Access>RW1C</Access>
				<Description>UI_UNF</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>User Interface underflow. If set, indicates an underflow occured during data transfer at the user interface (FIFO interface). Software must write a 0x1 to clear this register bit.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_USR_CNTRL_1</Name>
		<Address>0x00A0</Address>
		<Description>DAC User Control &amp; Status (REG_USR_CNTRL_1)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>USR_CHANMAX[7:0]</Name>
				<Access>RW</Access>
				<Description>USR_CHANMAX[7:0]</Description>
				<Visibility>Public</Visibility>
				<Width>8</Width>
				<Notes>This indicates the maximum number of inputs for the channel data multiplexers. User may add  different processing modules as inputs to the dac. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>8</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_USR_CNTRL_1</Name>
		<Address>0x00C0</Address>
		<Description>DAC Interface Control &amp; Status (REG_USR_CNTRL_1)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DAC_DP_DISABLE</Name>
				<Access>RO</Access>
				<Description>DAC_DP_DISABLE</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>This indicates the data path disable setting of this pcore. If disabled, most of the HDL data path modules are disabled allowing an external core full access to the raw DAC data.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_1</Name>
		<Address>0x0400</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_1)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DDS_SCALE_1[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_SCALE_1[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>4</Width>
				<Notes>The DDS scale for tone 1. The DDS for a channel consists of two tones. The final output is (channel_1 * scale_1) + (channel_2 * scale_2). The format is 1.1.14, note that if you do use both channels and set both scale to 0x40000, it is over-range. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>4</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_2</Name>
		<Address>0x0404</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_2)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DDS_INIT_1[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_INIT_1[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS phase initialization for tone 1. The DDS for a channel consists of two tones. The final output is (channel_1 &lt;&lt; scale_1) + (channel_2 &lt;&lt; scale_2) NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
			<BitField>
				<Name>DDS_INCR_1[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_INCR_1[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS phase increment for tone 1. The DDS for a channel consists of two tones. The final output is (channel_1 &lt;&lt; scale_1) + (channel_2 &lt;&lt; scale_2) NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_3</Name>
		<Address>0x0408</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_3)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DDS_SCALE_2[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_SCALE_2[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>4</Width>
				<Notes>The DDS scale for tone 2. The DDS for a channel consists of two tones. The final output is (channel_1 * scale_1) + (channel_2 * scale_2). The format is 1.1.14, note that if you do use both channels and set both scale to 0x40000, it is over-range. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>4</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_4</Name>
		<Address>0x040C</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_4)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DDS_INIT_2[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_INIT_2[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS phase initialization for tone 2. The DDS for a channel consists of two tones. The final output is (channel_1 &lt;&lt; scale_1) + (channel_2 &lt;&lt; scale_2) NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
			<BitField>
				<Name>DDS_INCR_2[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_INCR_2[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS phase increment for tone 2. The DDS for a channel consists of two tones. The final output is (channel_1 &lt;&lt; scale_1) + (channel_2 &lt;&lt; scale_2) NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_5</Name>
		<Address>0x0410</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_5)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DDS_PATT_2[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_PATT_2[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS data pattern for this channel.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
			<BitField>
				<Name>DDS_PATT_1[15:0]</Name>
				<Access>RW</Access>
				<Description>DDS_PATT_1[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>The DDS data pattern for this channel.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_6</Name>
		<Address>0x0414</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_6)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DAC_LB_ENB</Name>
				<Access>RW</Access>
				<Description>DAC_LB_ENB</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>If set enables loopback of receive data (applicable only on shared interface).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>1</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>DAC_PN_ENB</Name>
				<Access>RW</Access>
				<Description>DAC_PN_ENB</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>If set enables PN sequence (DATA_SEL[3:0] must be set to 0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_CHAN_CNTRL_7</Name>
		<Address>0x0418</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_CHAN_CNTRL_7)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>DAC_DDS_SEL[3:0]</Name>
				<Access>RW</Access>
				<Description>DAC_DDS_SEL[3:0]</Description>
				<Visibility>Public</Visibility>
				<Width>4</Width>
				<Notes>Select internal DDS sources. This is available only for DACs that support this feature. The following are supported- 0x00: default (single tone) 0x01: pattern 0x04: pn7 0x05: pn15 0x06: pn23 0x07: pn31 NOTE: You must still set DATA_SEL (0x1012, [3:0]), to select DMA/DDS. However bit [0] is ignored.</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>4</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_USR_CNTRL_3</Name>
		<Address>0x0420</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_USR_CNTRL_3)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>USR_DATATYPE_BE</Name>
				<Access>RW</Access>
				<Description>USR_DATATYPE_BE</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>The user data type format- if set, indicates big endian (default is little endian). NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>25</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>USR_DATATYPE_SIGNED</Name>
				<Access>RW</Access>
				<Description>USR_DATATYPE_SIGNED</Description>
				<Visibility>Public</Visibility>
				<Width>1</Width>
				<Notes>The user data type format- if set, indicates signed (2's complement) data (default is unsigned). NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>24</RegOffset>
				<SliceWidth>1</SliceWidth>
			</BitField>
			<BitField>
				<Name>USR_DATATYPE_SHIFT[7:0]</Name>
				<Access>RW</Access>
				<Description>USR_DATATYPE_SHIFT[7:0]</Description>
				<Visibility>Public</Visibility>
				<Width>8</Width>
				<Notes>The user data type format- the amount of right shift for actual samples within the total number of bits. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>8</SliceWidth>
			</BitField>
			<BitField>
				<Name>USR_DATATYPE_TOTAL_BITS[7:0]</Name>
				<Access>RW</Access>
				<Description>USR_DATATYPE_TOTAL_BITS[7:0]</Description>
				<Visibility>Public</Visibility>
				<Width>8</Width>
				<Notes>The user data type format- number of total bits used for a sample. The total number of bits must be an integer multiple of 8 (byte aligned). NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>8</RegOffset>
				<SliceWidth>8</SliceWidth>
			</BitField>
			<BitField>
				<Name>USR_DATATYPE_BITS[7:0]</Name>
				<Access>RW</Access>
				<Description>USR_DATATYPE_BITS[7:0]</Description>
				<Visibility>Public</Visibility>
				<Width>8</Width>
				<Notes>The user data type format- number of bits in a sample. This indicates the actual sample data bits. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>8</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_USR_CNTRL_4</Name>
		<Address>0x0424</Address>
		<Description>DAC Channel Control &amp; Status (channel - 0) (REG_USR_CNTRL_4)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
			<BitField>
				<Name>USR_INTERPOLATION_M[15:0]</Name>
				<Access>RW</Access>
				<Description>USR_INTERPOLATION_M[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>This holds the user interpolation M value of the channel that is currently being selected on  the multiplexer above. The toal interpolation factor is of the form M/N. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>16</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
			<BitField>
				<Name>USR_INTERPOLATION_N[15:0]</Name>
				<Access>RW</Access>
				<Description>USR_INTERPOLATION_N[15:0]</Description>
				<Visibility>Public</Visibility>
				<Width>16</Width>
				<Notes>This holds the user interpolation N value of the channel that is currently being selected on the multiplexer above. The toal interpolation factor is of the form M/N. NOT-APPLICABLE if DAC_DP_DISABLE is set (0x1).</Notes>
				<BitOffset>0</BitOffset>
				<RegOffset>0</RegOffset>
				<SliceWidth>16</SliceWidth>
			</BitField>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_*</Name>
		<Address>0x0440</Address>
		<Description>Channel 1, similar to registers 0x100 to 0x10f. (REG_*)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_*</Name>
		<Address>0x0480</Address>
		<Description>Channel 2, similar to registers 0x100 to 0x10f. (REG_*)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
		</BitFields>
	</Register>
	<Register>
		<Name>REG_*</Name>
		<Address>0x07C0</Address>
		<Description>Channel 15, similar to registers 0x100 to 0x10f. (REG_*)</Description>
		<Exists>True</Exists>
		<Width>32</Width>
		<Notes></Notes>
		<BitFields>
		</BitFields>
	</Register>
</adi_regmap_dac>
