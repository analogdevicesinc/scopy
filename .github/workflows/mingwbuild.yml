name: windows-mingw build

on: [push, pull_request]

jobs:

  make-exe-64:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
    - name: Pull the Docker Image
      run: docker pull analogdevices/scopy-build:1.4.1-mingw64
      
    - name: Run Docker Image
      shell: cmd
      run: |
            mkdir %GITHUB_WORKSPACE%\artifacts & echo %GITHUB_WORKSPACE%

            set "BUILD_HOST=windows-2019"
            set "USERNAME=github-actions"

            for /F "tokens=1,2 delims=/" %%a in ("%GITHUB_REPOSITORY%") do (
              set "GITHUB_REPO_OWNER=%%a"
              set "GITHUB_REPO_NAME=%%b"
            )

            echo %BUILD_HOST% & echo %USERNAME% & echo %GITHUB_REPO_OWNER% & echo %GITHUB_REPO_NAME%

            docker run ^
                -v %GITHUB_WORKSPACE%:C:\msys64\home\docker\scopy:rw ^
                -v %GITHUB_WORKSPACE%\artifacts:C:\msys64\home\docker\artifact_x86_64:rw ^
                -e GITHUB_WORKSPACE=%GITHUB_WORKSPACE% ^
                -e BUILD_HOST=%BUILD_HOST% ^
                -e USERNAME=%USERNAME% ^
                -e GITHUB_SERVER_URL=%GITHUB_SERVER_URL% ^
                -e GITHUB_API_URL=%GITHUB_API_URL% ^
                -e GITHUB_REPOSITORY_OWNER=%GITHUB_REPO_OWNER% ^
                -e GITHUB_REPOSITORY=%GITHUB_REPO_NAME% ^
                -e GITHUB_RUN_ID=%GITHUB_RUN_ID% ^
                -e GITHUB_RUN_NUMBER=%GITHUB_RUN_NUMBER% ^
                -e GITHUB_JOB=%GITHUB_JOB% ^
                -e GITHUB_RUN_ID=%GITHUB_RUN_ID% ^
                -e GITHUB_RUN_NUMBER=%GITHUB_RUN_NUMBER% ^
                -e RUNNER_ARCH=%RUNNER_ARCH% ^
                analogdevices/scopy-build:1.4.1-mingw64 C:\msys64\usr\bin\bash.exe -c '/home/docker/scopy/CI/appveyor/inside_mingw_docker.sh'

    - uses: actions/upload-artifact@v3
      with:
        name: scopy-x86_64
        path: ${{ github.workspace }}\artifacts\scopy-x86_64

    - uses: actions/upload-artifact@v3
      with:
        name: debug-x86_64
        path: ${{ github.workspace }}\artifacts\debug-x86_64

    - uses: actions/upload-artifact@v3
      with:
        name: scopy-x86_64-setup
        path: ${{ github.workspace }}\artifacts\scopy-64-setup.exe

    # Debug session
    # - name: Start SSH session
    #   uses: luchihoratiu/debug-via-ssh@main
    #   with:
    #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    #     SSH_PASS: ${{ secrets.SSH_PASS }}
    #     NGROK_REGION: 'eu'

    - name: Upload master executable to continous prerelease
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        export SHORT_SHA=${{ github.sha }}
        export DEPLOY_FILE=Scopy-64-setup-${SHORT_SHA::7}.exe
        export ARTIFACT_ARCHIVE=Scopy-64-setup.zip

        cp "${{ github.workspace }}\artifacts\scopy-64-setup.exe" $DEPLOY_FILE
        tar.exe -a -c -f $ARTIFACT_ARCHIVE $DEPLOY_FILE

        choco install wget
        wget https://github.com/tcnksm/ghr/releases/download/v0.14.0/ghr_v0.14.0_windows_amd64.zip
        unzip ghr_v0.14.0_windows_amd64.zip

        "ghr_v0.14.0_windows_amd64\ghr.exe" -u ${{ github.repository_owner }} -r scopy -name "Continuous build" -b "Latest succesful master build " -prerelease -debug -replace continous $ARTIFACT_ARCHIVE
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
#  make-exe-32:
#    runs-on: windows-latest
#
#    steps:
##    - uses: actions/checkout@v2
#    - name: Pull the Docker Image
#      run: docker pull analogdevices/scopy-build:mingw32
#      
#    - name: Run Docker Image
#      shell: cmd
#      run: |
#            mkdir %GITHUB_WORKSPACE%\artifacts & echo %GITHUB_WORKSPACE% & #docker run -v %cd%:C:\msys64\home\docker\scopy:rw -v #%GITHUB_WORKSPACE%\artifacts:C:\msys64\home\docker\artifact_i686:rw #-e GITHUB_WORKSPACE=%GITHUB_WORKSPACE% analogdevices/#scopy-build:mingw32 C:\msys64\usr\bin\bash.exe -c '/home/docker/#scopy/CI/appveyor/inside_mingw_docker.sh'
#    - uses: actions/upload-artifact@v2
#      with:
#        name: scopy-i686.zip
#        path: ${{ github.workspace }}\artifacts\scopy-i686.zip
#
#    - uses: actions/upload-artifact@v2
#      with:
#        name: debug-i686.zip
#        path: ${{ github.workspace }}\artifacts\debug-i686.zip
#    - uses: actions/upload-artifact@v2
#      with:
#        name: scopy-i686-setup.exe
#        path: ${{ github.workspace }}\artifacts\scopy-32-setup.exe 
